{"version":3,"file":"static/js/954.26cd44dc.chunk.js","mappings":"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","sources":["webpack://frontend/./src/@components/container/Style3.module.scss?6f5b","@components/container/Style3.tsx","webpack://frontend/./src/@components/observer/Observer.module.scss?654a","@components/observer/index.tsx","webpack://frontend/./src/pages/rooms/chats/Width700.module.scss?cf72","pages/rooms/chats/Width700.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Style3_container__UnzqP\",\"selected\":\"Style3_selected__7EHTu\"};","import styles from './Style3.module.scss';\nimport React from 'react'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode,\n  selected?: boolean,\n};\n\nconst Container = ({children, selected, ...props}: Props) => {\n  return (\n    <div {...props} className={`${styles.container} ${selected ? styles.selected: \"\"}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default Container","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Observer_container__fqmeT\",\"show\":\"Observer_show__zCz8Q\"};","import styles from './Observer.module.scss';\nimport React, {useEffect, useRef} from 'react';\n\ninterface Props {\n    children: React.ReactNode,\n    threshold?: number\n}\n\nconst Observer = ({children, threshold=0.5}: Props) => {\n\n    const ref = useRef<any>();\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            const [entry] = entries;\n            entry.target.classList.toggle(styles.show, entry.isIntersecting);  \n            if(entry.isIntersecting) observer.unobserve(entry.target);\n        }, {\n            threshold: threshold\n        });\n        observer.observe(ref.current);\n    }, [threshold]);\n\n    return (\n        <div className={styles.container} ref={ref}>\n            {children}\n        </div>\n    )\n}\n\nexport default Observer","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Width700_container__8eLHn\",\"findChats\":\"Width700_findChats__VTiPz\",\"chatList\":\"Width700_chatList__pNH1p\",\"element\":\"Width700_element__GmxBi\",\"image\":\"Width700_image__qyYae\",\"admin\":\"Width700_admin__gSo0E\",\"selected\":\"Width700_selected__lzXuG\"};","import styles from './Width700.module.scss';\nimport { useEffect, useState } from 'react';\nimport { useAppSelector } from '@redux/hooks/useRedux';\nimport { Link } from 'react-router-dom';\nimport useQuery from '@hooks/useQuery';\nimport Message from '@components/hover/Mesage';\nimport Observer from '@components/observer';\nimport Round from '@components/container/Style3';\nimport { AiFillCrown } from 'react-icons/ai';\nimport {MdOutlineKeyboardArrowLeft, MdKeyboardArrowDown} from 'react-icons/md';\n\nconst Width500 = () => {\n\n    const [open, setOpen] = useState(false);\n    const {getQuery, location} = useQuery();\n    const {user} = useAppSelector(state => state.user);\n    const {chats, room} = useAppSelector(state => state.rooms);\n    const id = getQuery();\n\n    useEffect(() => {\n        setOpen(false);\n    }, [location]);\n\n    return (\n        <div className={styles.container}>\n            {!open &&\n                <div className={styles.findChats}>\n                    <button onClick={() => setOpen(!open)}> \n                        <MdOutlineKeyboardArrowLeft/>     \n                        {!id ? \"Chat rooms\" : <img src={room?.image} alt=\"i\" />}\n                        {!id ? \"\" : <p>{room?.name}</p>}\n                    </button>\n                </div>\n            }\n\n            {open && \n                <>\n                \n                    <div className={styles.findChats}>\n                        <button onClick={() => setOpen(!open)}> \n                            <MdKeyboardArrowDown/>     \n                            {!id ? \"Back\" : <img src={room?.image} alt=\"i\" />}\n                            {!id ? \"\" : <p>{room?.name}</p>}\n                        </button>\n                    </div>\n\n                    <div className={styles.chatList}>\n                        {chats?.map(el => \n                            <Observer key={el._id}>\n                                <Round selected={id.substring(1) === el._id}>\n                                    <Link to={`?${el._id}`} className={styles.element} onClick={() => setOpen(false)}>\n                                        <div className={styles.image}>\n                                            <img src={el.image} alt=\"qs\" />\n                                            <p>{el.name}</p>\n                                        </div>\n                                        <div className={styles.admin}>\n                                            {el.admin === user?._id && <Message message=\"admin\"><AiFillCrown/></Message>}\n                                        </div>\n                                    </Link>  \n                                </Round>\n                            </Observer>  \n                        )}\n                    </div>\n\n                </>\n            }\n        </div>\n    )\n};\n\nexport default Width500;"],"names":["_ref","children","selected","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","concat","styles","_ref$threshold","threshold","ref","useRef","useEffect","observer","IntersectionObserver","entries","entry","_slicedToArray","target","classList","toggle","isIntersecting","unobserve","observe","current","_useState","useState","_useState2","open","setOpen","_useQuery","useQuery","getQuery","location","user","useAppSelector","state","_useAppSelector2","rooms","chats","room","id","_jsxs","onClick","MdOutlineKeyboardArrowLeft","src","image","alt","name","_Fragment","MdKeyboardArrowDown","map","el","Observer","Round","substring","_id","Link","to","admin","Message","message","AiFillCrown"],"sourceRoot":""}